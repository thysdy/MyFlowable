eureka:
  instance:
    prefer-ip-address: true
#      ip-address: 192.168.0.101

  client:
    serviceUrl:
      defaultZone: http://172.17.238.40:8761/eureka/
#      defaultZone: http://192.168.0.165:8761/eureka/
server:
  port: 8088
spring:
  application:
    name: myFlowable
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      username: zshadmin
      password: zshadmin
      url: jdbc:mysql://rm-2ze3nlnfa5398o594fo.mysql.rds.aliyuncs.com:3306/flowabledb
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 数据库连接池初始化大小
      initialSize: 10
      # 数据库连接池最大值
      maxActive: 20
      # 数据库连接池最小值
      minIdle: 10
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 用来验证数据库连接
      validationQuery: SELECT 'x'
      # 默认值为false。建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testWhileIdle: true
      # 默认值为true。申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      testOnBorrow: false
      # 默认值为false。归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      testOnReturn: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      poolPreparedStatements: true
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100。
      maxPoolPreparedStatementPerConnectionSize: 20
      #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #filters: stat,wall,slf4j
      #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      #connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.frgk.flowable.entity
#hystrix的超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 30000
#ribbon的超时时间
ribbon:
  ReadTimeout: 30000
  ConnectTimeout: 30000

